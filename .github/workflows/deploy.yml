name: Deploy CURK Website to GCP Cloud Run

on:
  push:
    branches: [ main, master ]
    paths: [ 'client/**' ]
  pull_request:
    branches: [ main, master ]
    paths: [ 'client/**' ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: curk-website
  REGION: asia-southeast1

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
        
    - name: Install dependencies
      run: |
        cd client
        npm ci
        
    - name: Run linting
      run: |
        cd client
        npm run lint
        
    - name: Build application
      run: |
        cd client
        npm run build:prod
        
    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        
    - name: Configure Docker for GCR
      run: |
        gcloud auth configure-docker
        
    - name: Build and push Docker image
      run: |
        cd client
        docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA .
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA
        
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA \
          --region $REGION \
          --platform managed \
          --allow-unauthenticated \
          --port 80 \
          --memory 512Mi \
          --cpu 1 \
          --min-instances 0 \
          --max-instances 10 \
          --concurrency 80 \
          --timeout 300 \
          --set-env-vars NODE_ENV=production
          
    - name: Show service URL
      run: |
        gcloud run services describe $SERVICE_NAME --region=$REGION --format='value(status.url)'
